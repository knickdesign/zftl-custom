@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin inline-flexbox() {
  display: -webkit-inline-flex;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

.flex-wrapper {
  @include flexbox;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: flex-start;
  align-content: flex-start;
}

.inline-flex-wrapper {
  @include inline-flexbox;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: flex-start;
  align-content: flex-start;
}

.flex-wrapper,
.inline-flex-wrapper {
  &.flex-wrapper--left {
    justify-content: flex-start;
  }
  
  &.flex-wrapper--center {
    justify-content: center;
    align-items: center;
  }

  &.flex-wrapper--hcenter {
    justify-content: center;
  }

  &.flex-wrapper--vcenter {
    align-items: center;
  }

  &.flex-wrapper--right {
    justify-content: flex-end;
  }

  &.flex-wrapper--stretch {
    align-items: stretch;
  }
}

.flex-square {
  flex: 1 0 0;

  &:before {
    /* The psuedo-element's padding-top percentage is based on the element's width. */
    padding-top: 100%;
    content: "";
    float: left;
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

@media screen and (max-width: $breakpoint-m-width) {
  .flex-square {
    flex: 0 1 auto;
  }
}
